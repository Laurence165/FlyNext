version: '3.8'

services:
  flynext:
    build: 
      context: .
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - afs
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/flynext?schema=public
      - NODE_ENV=development
      - AFS_API_URL=http://afs:3000/api
    volumes:
      - .:/app
      - /app/node_modules
    entrypoint: ["/app/docker-entrypoint.sh"]
    command: ["npm", "run", "dev"]

  afs:
    build: 
      context: ../afs
    ports:
      - "3456:3000"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/afs?schema=public
      - NODE_ENV=development
    volumes:
      - ../afs:/app
      - /app/node_modules
    command: >
      sh -c "npx prisma generate && npm run dev"

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_MULTIPLE_DATABASES=afs,flynext
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker-postgres-multiple-databases.sh:/docker-entrypoint-initdb.d/docker-postgres-multiple-databases.sh

  afs-migration-and-import:
    build:
      context: ../afs
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/afs?schema=public
    command: >
      sh -c "npx prisma migrate deploy &&
         npx prisma generate &&
         node prisma/data/import_data &&
         node prisma/data/generate_flights &&
         node prisma/data/import_agencies"
    volumes:
      - ../afs:/app
      - /app/node_modules

  flynext-migration-and-seed:
    build:
      context: .
    depends_on:
      - postgres
      - afs-migration-and-import
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/flynext?schema=public
      - AFS_API_URL=http://afs:3000/api
    command: >
      sh -c "npx prisma migrate deploy &&
         npx prisma generate &&
         ts-node prisma/seed.ts"
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres-data: